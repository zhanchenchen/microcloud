<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.5.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.zcc</groupId>
    <artifactId>microcloud</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>microcloud</name>
    <packaging>pom</packaging>
    <description>Demo project for Spring Boot</description>

    <modules>
        <module>microcloud-api</module>
        <module>microcloud-service</module>
        <module>microcloud-provider-dept-8001</module>
        <module>microcloud-provider-dept-8002</module>
        <module>microcloud-provider-dept-8003</module>
        <module>microcloud-provider-company-8101</module>
        <module>microcloud-provider-dept-hystrix</module>
        <module>microcloud-provide-turbine</module>
		<module>microcloud-zuul-gateway</module>
		<module>microcloud-consumer-hystrix-dashboard</module>
        <module>microcloud-consumer-80</module>
        <module>microcloud-consumer-feign</module>
        <module>microcloud-consumer-hystrix</module>
        <module>microcloud-security</module>
        <module>microcloud-eureka-7001</module>
        <module>microcloud-eureka-7002</module>
        <module>microcloud-eureka-7003</module>
        <module>microcloud-eureka-server</module>
        <module>microcloud-eureka</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <spring-cloud.version>Greenwich.SR1</spring-cloud.version>
        <microcloud-api.version>0.0.1-SNAPSHOT</microcloud-api.version>
        <microcloud-service.version>0.0.1-SNAPSHOT</microcloud-service.version>
        <microcloud-security.version>0.0.1-SNAPSHOT</microcloud-security.version>
        <junit.version>4.13.1</junit.version>
        <lombok.version>1.18.6</lombok.version>
        <druid.version>1.1.10</druid.version>
        <mysql.version>5.0.8</mysql.version>
        <mybatis.version>1.3.2</mybatis.version>
        <logback.version>1.2.2</logback.version>
        <slf4j.version>1.7.25</slf4j.version>
        <eureka.version>2.1.1.RELEASE</eureka.version>
        <jaxb.version>2.3.0</jaxb.version>
        <activation.version>1.1.1</activation.version>
    </properties>

    <dependencyManagement><!--全局版本号管理-->
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
                <version>${eureka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
                <version>${eureka.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zcc</groupId>
                <artifactId>microcloud-api</artifactId>
                <version>${microcloud-api.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zcc</groupId>
                <artifactId>microcloud-service</artifactId>
                <version>${microcloud-service.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zcc</groupId>
                <artifactId>microcloud-security</artifactId>
                <version>${microcloud-security.version}</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis.version}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
                <!--<scope>test</scope>-->
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-access</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <!--JDK11下运行Eureka需要以下依赖包-->
            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>${jaxb.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-core</artifactId>
                <version>${jaxb.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-impl</artifactId>
                <version>${jaxb.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.activation</groupId>
                <artifactId>activation</artifactId>
                <version>${activation.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>

    </dependencies>
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.yml</include>
                    <include>**/*.xml</include>
                </includes>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <filtering>false</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>    <!--对资源文件匹配过滤，以$包裹的pom映射信息信息-->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <delimiters>
                        <delimiter>$</delimiter>
                    </delimiters>
                </configuration>
            </plugin>
            <plugin><!-- 编译插件 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
        </plugins>
    </build>


<!--    <repositories>-->
<!--        <repository>-->
<!--            <id>spring-milestones</id>-->
<!--            <name>Spring Milestones</name>-->
<!--            <url>https://repo.spring.io/milestone</url>-->
<!--            <snapshots>&lt;!&ndash;禁止获取快照组件&ndash;&gt;-->
<!--                <enabled>false</enabled>-->
<!--            </snapshots>-->
<!--        </repository>-->
<!--    </repositories>-->

</project>
